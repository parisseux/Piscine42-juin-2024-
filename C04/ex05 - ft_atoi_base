/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi_base.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pchatagn <pchatagn@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/07/11 21:35:16 by pchatagn          #+#    #+#             */
/*   Updated: 2024/07/11 22:54:32 by pchatagn         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>

int ft_strlen(char *str)
{
    int i = 0;
    while (str[i])
        i++;
    return (i);
}

int ft_check(char *s, char c, int i)
{
    int j = 0;
    while (j < i)
    {
        if (s[j] == c)
            return (1);
        j++;
    }
    return (0);
}

int ft_check_base(char *base)
{
    int i = 0;
    if (ft_strlen(base) <= 1)
        return (1);
    while (base[i])
    {
         if (base[i] == '+' || base[i] == '-' || base[i] == ' ' || base[i] == '\t' || base[i] == '\n' || base[i] == '\v' || base[i] == '\f' || base[i] =='\r')
            return (1);
        i++;
    }
    i = 0;
    while (base[i])
    {
        if (ft_check(base, base[i], i) == 1)
            return (1);
        i++;
    }
    return (0);
}

int ft_base_value(char c, char *base)
{
    int i = 0;
    while (base[i])
    {
        if (base[i] == c)
            return (i);
        i++;
    }
    return (-1);
    
}
int ft_atoi_base(char *str, char *base)
{
    int len;
    int res = 0;
    int i = 0;
    int sign = 1;
    int val = 0;


    len = ft_strlen(base);
    if (ft_check_base(base) == 1)
        return (0);
        
    while (str[i] == '\t' || str[i] == '\n'	|| str[i] == '\v' || str[i] == '\f'|| str[i] == '\r' || str[i] == ' ')
		i++;
    while (str[i] == '+' || str[i] == '-')
    {
        if (str[i] == '-')
            sign = -sign;       
        i++;   
    }
    
    while (str[i])
    {
        val = ft_base_value(str[i], base);
        
        if (val == -1)
            return (0);
        res = res * len + val;
        i++;
    }
    return (res * sign);
}
